name = "[[TODO: REPO NAME]]"
version = "[[TODO: REPO VERSION]]"
description = "Civic Interconnect [[TODO: REPO DESCRIPTION]]."
authors = [
    { name="Civic Interconnect", email="info@civic-interconnect.org" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"


# [[TODO: UPDATE APP DEPENDENCIES]]
dependencies = [
    "loguru",
    "PyYAML",
    "typer",
    "rich",
    "requests",
    "gql[aiohttp]",
]

# [[TODO: UPDATE APP DEVELOPMENT DEPENDENCIES]]
[project.optional-dependencies]
dev = [
  "pdoc",
  "pre-commit",
  "pygments",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "ruff",
  "build",
  "twine"
]

[project.urls]
"Homepage" = "https://github.com/civic-interconnect/[[TODO: REPO NAME]]"
"Source" = "https://github.com/civic-interconnect/[[TODO: REPO NAME]]"

[tool.setuptools]
package-dir = { "" = "src" }
packages = [
    "[[TODO: REPO PACKAGE NAME]]",
    "[[TODO: REPO PACKAGE NAME]].cli",
]

[tool.setuptools.package-data]
"[[TODO: REPO PACKAGE NAME]]" = ["*.yaml"]

[tool.pdoc]
docformat = "google"
output_dir = "docs/api"
modules = ["["[[TODO: REPO PACKAGE NAME]]"]"]

# ----------------------------------
# Civic Interconnect Standards below
# ----------------------------------

[build-system]
requires = ["setuptools", "wheel", "uv_build>=0.7.19,<0.8.0"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
target-version = "py312"
fix = true
unsafe-fixes = true
preview = true

[tool.ruff.lint]
extend-select = [ # add these checks
    "E",      # pycodestyle errors (e.g. indentation, whitespace, etc.)
    "W",      # pycodestyle warnings (e.g. line breaks, trailing spaces)
    "F",      # pyflakes (undefined names, unused imports, etc.)
    "I",      # isort (import sorting issues)
    "UP",     # pyupgrade (suggest modern Python syntax)
    "C90",    # mccabe complexity (flag overly complex functions)
    "N",      # pep8-naming (enforce naming conventions)
    "B",      # flake8-bugbear (detect likely bugs and design problems)
    "A",      # flake8-builtins (prevent shadowing Python built-ins)
    "SIM",    # flake8-simplify (suggest simpler alternatives)
    "TCH",    # flake8-type-checking (optimize type-checking imports)
]
ignore = ["E501"]  # line length handled by formatter

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --strict-markers"
pythonpath = ["src"]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
